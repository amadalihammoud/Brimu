# üê≥ Dockerfile para Frontend do Brimu
# Multi-stage build com Nginx otimizado

# Stage 1: Build
FROM node:18-alpine AS builder

LABEL maintainer="Equipe Brimu"
LABEL description="Frontend React do sistema Brimu"
LABEL version="1.0.0"

# Instalar depend√™ncias do sistema
RUN apk add --no-cache git python3 make g++

# Definir diret√≥rio de trabalho
WORKDIR /app

# Copiar arquivos de depend√™ncias
COPY package*.json ./

# Instalar depend√™ncias
RUN npm ci --omit=dev

# Copiar c√≥digo fonte
COPY public/ ./public/
COPY src/ ./src/
COPY index.html ./
COPY vite.config.js ./
COPY tailwind.config.js ./
COPY postcss.config.js ./

# Copiar arquivo de ambiente para build
COPY .env.example .env

# Build da aplica√ß√£o para produ√ß√£o
RUN npm run build

# Stage 2: Production com Nginx
FROM nginx:1.25-alpine AS production

# Instalar depend√™ncias adicionais
RUN apk add --no-cache curl tini

# Remover configura√ß√£o padr√£o do Nginx
RUN rm /etc/nginx/conf.d/default.conf

# Copiar arquivos buildados
COPY --from=builder /app/dist /usr/share/nginx/html

# Copiar configura√ß√£o customizada do Nginx
COPY nginx.conf /etc/nginx/conf.d/default.conf

# Copiar script de inicializa√ß√£o
COPY docker-entrypoint.sh /docker-entrypoint.sh
RUN chmod +x /docker-entrypoint.sh

# Criar usu√°rio n√£o-root
RUN addgroup -g 1001 -S nginx-user \
    && adduser -S nginx-user -u 1001 -G nginx-user

# Ajustar permiss√µes
RUN chown -R nginx-user:nginx-user /usr/share/nginx/html \
    && chown -R nginx-user:nginx-user /var/cache/nginx \
    && chown -R nginx-user:nginx-user /var/log/nginx \
    && chown -R nginx-user:nginx-user /etc/nginx/conf.d \
    && touch /var/run/nginx.pid \
    && chown -R nginx-user:nginx-user /var/run/nginx.pid

# Definir vari√°veis de ambiente
ENV NGINX_ENVSUBST_OUTPUT_DIR=/etc/nginx/conf.d

# Expor porta
EXPOSE 80

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD curl -f http://localhost/health || exit 1

# Mudar para usu√°rio n√£o-root
USER nginx-user

# Usar tini como init process
ENTRYPOINT ["/sbin/tini", "--"]

# Comando padr√£o
CMD ["/docker-entrypoint.sh"]

# Metadata
LABEL org.opencontainers.image.title="Brimu Frontend"
LABEL org.opencontainers.image.description="Frontend React do sistema Brimu"
LABEL org.opencontainers.image.version="1.0.0"
LABEL org.opencontainers.image.vendor="Equipe Brimu"
LABEL org.opencontainers.image.licenses="MIT"